{-
   Persona
   KSF Media unified login service

   The version of the OpenAPI document: 1.3.0

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git
   Do not edit this file manually.
-}


module Data.NewUser exposing (NewUser, decoder, encode)

import Dict exposing (Dict)
import Json.Decode as Decode exposing (Decoder)
import Json.Decode.Pipeline exposing (optional, required)
import Json.Encode as Encode


type alias NewUser =
    { firstName : String
    , lastName : String
    , emailAddress : String
    , password : String
    , confirmPassword : String
    , streetAddress : Maybe (String)
    , zipCode : Maybe (String)
    , city : Maybe (String)
    , country : Maybe (String)
    , phone : Maybe (String)
    }


decoder : Decoder NewUser
decoder =
    Decode.succeed NewUser
        |> required "firstName" Decode.string
        |> required "lastName" Decode.string
        |> required "emailAddress" Decode.string
        |> required "password" Decode.string
        |> required "confirmPassword" Decode.string
        |> optional "streetAddress" (Decode.nullable Decode.string) Nothing
        |> optional "zipCode" (Decode.nullable Decode.string) Nothing
        |> optional "city" (Decode.nullable Decode.string) Nothing
        |> optional "country" (Decode.nullable Decode.string) Nothing
        |> optional "phone" (Decode.nullable Decode.string) Nothing



encode : NewUser -> Encode.Value
encode model =
    Encode.object
        [ ( "firstName", Encode.string model.firstName )
        , ( "lastName", Encode.string model.lastName )
        , ( "emailAddress", Encode.string model.emailAddress )
        , ( "password", Encode.string model.password )
        , ( "confirmPassword", Encode.string model.confirmPassword )
        , ( "streetAddress", Maybe.withDefault Encode.null (Maybe.map Encode.string model.streetAddress) )
        , ( "zipCode", Maybe.withDefault Encode.null (Maybe.map Encode.string model.zipCode) )
        , ( "city", Maybe.withDefault Encode.null (Maybe.map Encode.string model.city) )
        , ( "country", Maybe.withDefault Encode.null (Maybe.map Encode.string model.country) )
        , ( "phone", Maybe.withDefault Encode.null (Maybe.map Encode.string model.phone) )

        ]


